"""Add presentation_type to abstracts and sync schema

Revision ID: 2e173901bfdb
Revises: 50f51e02657c
Create Date: 2025-06-26 12:09:06.049067

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '2e173901bfdb'
down_revision: Union[str, None] = '50f51e02657c'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('abstract_reviewer_assignment')
    op.drop_index('ix_reviewer_invitations_id', table_name='reviewer_invitations')
    op.drop_table('reviewer_invitations')
    op.drop_index('ix_certificates_id', table_name='certificates')
    op.drop_table('certificates')
    op.drop_index('ix_abstracts_id', table_name='abstracts')
    op.drop_table('abstracts')
    op.drop_index('ix_live_sessions_id', table_name='live_sessions')
    op.drop_table('live_sessions')
    op.drop_index('ix_conferences_id', table_name='conferences')
    op.drop_table('conferences')
    op.drop_index('ix_reviewers_id', table_name='reviewers')
    op.drop_table('reviewers')
    op.drop_index('ix_authors_id', table_name='authors')
    op.drop_table('authors')
    op.drop_table('abstract_authors')
    op.drop_index('ix_reviews_id', table_name='reviews')
    op.drop_table('reviews')
    op.drop_index('ix_users_email', table_name='users')
    op.drop_index('ix_users_id', table_name='users')
    op.drop_table('users')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('users_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('fullname', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('email', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('hashed_password', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('photo_data', postgresql.BYTEA(), autoincrement=False, nullable=True),
    sa.Column('role', postgresql.ENUM('ADMIN', 'ORGANIZER', 'REVIEWER', 'AUTHOR', name='userrole'), autoincrement=False, nullable=True),
    sa.Column('first_name', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('last_name', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('affiliation', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('is_active', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('conference_count', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='users_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_index('ix_users_id', 'users', ['id'], unique=False)
    op.create_index('ix_users_email', 'users', ['email'], unique=False)
    op.create_table('reviews',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('reviewer_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('abstract_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('rating', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('comment', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['abstract_id'], ['abstracts.id'], name='reviews_abstract_id_fkey'),
    sa.ForeignKeyConstraint(['reviewer_id'], ['users.id'], name='reviews_reviewer_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='reviews_pkey')
    )
    op.create_index('ix_reviews_id', 'reviews', ['id'], unique=False)
    op.create_table('abstract_authors',
    sa.Column('abstract_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('author_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('author_order', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('role', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['abstract_id'], ['abstracts.id'], name='abstract_authors_abstract_id_fkey'),
    sa.ForeignKeyConstraint(['author_id'], ['authors.id'], name='abstract_authors_author_id_fkey'),
    sa.PrimaryKeyConstraint('abstract_id', 'author_id', name='abstract_authors_pkey')
    )
    op.create_table('authors',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('first_name', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('last_name', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('email', sa.VARCHAR(length=120), autoincrement=False, nullable=True),
    sa.Column('affiliation', sa.VARCHAR(length=200), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='authors_pkey')
    )
    op.create_index('ix_authors_id', 'authors', ['id'], unique=False)
    op.create_table('reviewers',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('conference_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['conference_id'], ['conferences.id'], name='reviewers_conference_id_fkey'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='reviewers_user_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='reviewers_pkey')
    )
    op.create_index('ix_reviewers_id', 'reviewers', ['id'], unique=False)
    op.create_table('conferences',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('conferences_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('title', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('description', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('deadline', sa.DATE(), autoincrement=False, nullable=False),
    sa.Column('important_date', sa.DATE(), autoincrement=False, nullable=False),
    sa.Column('fees', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False),
    sa.Column('venue', postgresql.ENUM('ONLINE', 'IN_PERSON', name='venueenum'), autoincrement=False, nullable=False),
    sa.Column('thematic', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=False),
    sa.Column('image', postgresql.BYTEA(), autoincrement=False, nullable=True),
    sa.Column('organizer_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['organizer_id'], ['users.id'], name='conferences_organizer_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='conferences_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_index('ix_conferences_id', 'conferences', ['id'], unique=False)
    op.create_table('live_sessions',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('session_title', sa.VARCHAR(length=200), autoincrement=False, nullable=False),
    sa.Column('session_time', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('conference_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['conference_id'], ['conferences.id'], name='live_sessions_conference_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='live_sessions_pkey')
    )
    op.create_index('ix_live_sessions_id', 'live_sessions', ['id'], unique=False)
    op.create_table('abstracts',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('abstracts_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('title', sa.VARCHAR(length=200), autoincrement=False, nullable=False),
    sa.Column('summary', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('keywords', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('submitted_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('status', postgresql.ENUM('pending', 'accepted', 'rejected', name='abstract_status_enum'), autoincrement=False, nullable=True),
    sa.Column('logs', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('file_data', postgresql.BYTEA(), autoincrement=False, nullable=True),
    sa.Column('file_filename', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('conference_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['conference_id'], ['conferences.id'], name='abstracts_conference_id_fkey'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='abstracts_user_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='abstracts_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_index('ix_abstracts_id', 'abstracts', ['id'], unique=False)
    op.create_table('certificates',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('certificate_type', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('issued_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('conference_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['conference_id'], ['conferences.id'], name='certificates_conference_id_fkey'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='certificates_user_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='certificates_pkey')
    )
    op.create_index('ix_certificates_id', 'certificates', ['id'], unique=False)
    op.create_table('reviewer_invitations',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('invited_by_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('invitee_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('invitee_email', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('conference_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('status', postgresql.ENUM('pending', 'accepted', 'rejected', name='invitationstatus'), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('accept_token', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('reject_token', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['conference_id'], ['conferences.id'], name='reviewer_invitations_conference_id_fkey', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['invited_by_id'], ['users.id'], name='reviewer_invitations_invited_by_id_fkey', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['invitee_id'], ['users.id'], name='reviewer_invitations_invitee_id_fkey', ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id', name='reviewer_invitations_pkey'),
    sa.UniqueConstraint('accept_token', name='reviewer_invitations_accept_token_key'),
    sa.UniqueConstraint('reject_token', name='reviewer_invitations_reject_token_key')
    )
    op.create_index('ix_reviewer_invitations_id', 'reviewer_invitations', ['id'], unique=False)
    op.create_table('abstract_reviewer_assignment',
    sa.Column('abstract_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('reviewer_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['abstract_id'], ['abstracts.id'], name='abstract_reviewer_assignment_abstract_id_fkey'),
    sa.ForeignKeyConstraint(['reviewer_id'], ['users.id'], name='abstract_reviewer_assignment_reviewer_id_fkey'),
    sa.PrimaryKeyConstraint('abstract_id', 'reviewer_id', name='abstract_reviewer_assignment_pkey')
    )
    # ### end Alembic commands ###
