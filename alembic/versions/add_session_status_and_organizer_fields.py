"""add session status and organizer fields

Revision ID: add_session_status_organizer
Revises: 2e173901bfdb
Create Date: 2024-01-15 10:00:00.000000

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'add_session_status_organizer'
down_revision = '2e173901bfdb'
branch_labels = None
depends_on = None

def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    
    # Créer l'enum pour le statut de session
    session_status_enum = postgresql.ENUM('PENDING', 'ACTIVE', 'ENDED', name='session_status_enum')
    session_status_enum.create(op.get_bind())
    
    # Ajouter les nouvelles colonnes à la table live_sessions
    op.add_column('live_sessions', sa.Column('organizer_id', sa.INTEGER(), nullable=True))
    op.add_column('live_sessions', sa.Column('status', session_status_enum, nullable=True))
    op.add_column('live_sessions', sa.Column('started_at', postgresql.TIMESTAMP(), nullable=True))
    op.add_column('live_sessions', sa.Column('ended_at', postgresql.TIMESTAMP(), nullable=True))
    op.add_column('live_sessions', sa.Column('is_active', sa.BOOLEAN(), nullable=True))
    
    # Ajouter la contrainte de clé étrangère
    op.create_foreign_key('live_sessions_organizer_id_fkey', 'live_sessions', 'users', ['organizer_id'], ['id'])
    
    # Mettre à jour les valeurs par défaut
    op.execute("UPDATE live_sessions SET status = 'PENDING', is_active = false WHERE status IS NULL")
    
    # Rendre les colonnes non nullables après avoir mis à jour les valeurs
    op.alter_column('live_sessions', 'status', nullable=False)
    op.alter_column('live_sessions', 'is_active', nullable=False)
    
    # ### end Alembic commands ###

def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    
    # Supprimer la contrainte de clé étrangère
    op.drop_constraint('live_sessions_organizer_id_fkey', 'live_sessions', type_='foreignkey')
    
    # Supprimer les colonnes ajoutées
    op.drop_column('live_sessions', 'is_active')
    op.drop_column('live_sessions', 'ended_at')
    op.drop_column('live_sessions', 'started_at')
    op.drop_column('live_sessions', 'status')
    op.drop_column('live_sessions', 'organizer_id')
    
    # Supprimer l'enum
    session_status_enum = postgresql.ENUM('PENDING', 'ACTIVE', 'ENDED', name='session_status_enum')
    session_status_enum.drop(op.get_bind())
    
    # ### end Alembic commands ### 