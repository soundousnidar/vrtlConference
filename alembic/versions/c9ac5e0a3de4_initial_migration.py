"""Initial migration

Revision ID: c9ac5e0a3de4
Revises: 
Create Date: 2025-06-05 12:37:54.632558

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'c9ac5e0a3de4'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('authors',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('first_name', sa.String(length=100), nullable=False),
    sa.Column('last_name', sa.String(length=100), nullable=False),
    sa.Column('email', sa.String(length=120), nullable=True),
    sa.Column('affiliation', sa.String(length=200), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_authors_id'), 'authors', ['id'], unique=False)
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('fullname', sa.String(length=100), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('hashed_password', sa.String(length=255), nullable=False),
    sa.Column('photo_data', sa.LargeBinary(), nullable=True),
    sa.Column('role', sa.Enum('ADMIN', 'ORGANIZER', 'REVIEWER', 'AUTHOR', name='userrole'), nullable=True),
    sa.Column('first_name', sa.String(length=50), nullable=True),
    sa.Column('last_name', sa.String(length=50), nullable=True),
    sa.Column('affiliation', sa.String(length=100), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('conference_count', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_index(op.f('ix_users_id'), 'users', ['id'], unique=False)
    op.create_table('conferences',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('deadline', sa.Date(), nullable=False),
    sa.Column('important_date', sa.Date(), nullable=False),
    sa.Column('fees', sa.Float(), nullable=False),
    sa.Column('venue', sa.Enum('ONLINE', 'IN_PERSON', name='venueenum'), nullable=False),
    sa.Column('thematic', sa.JSON(), nullable=False),
    sa.Column('image', sa.String(), nullable=True),
    sa.Column('organizer_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['organizer_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_conferences_id'), 'conferences', ['id'], unique=False)
    op.create_table('abstracts',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=200), nullable=False),
    sa.Column('summary', sa.Text(), nullable=False),
    sa.Column('keywords', sa.String(length=255), nullable=False),
    sa.Column('submitted_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('status', sa.Enum('pending', 'accepted', 'rejected', name='abstract_status_enum'), nullable=True),
    sa.Column('logs', sa.Text(), nullable=True),
    sa.Column('file_data', sa.LargeBinary(), nullable=True),
    sa.Column('file_filename', sa.String(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('conference_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['conference_id'], ['conferences.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_abstracts_id'), 'abstracts', ['id'], unique=False)
    op.create_table('reviewer_invitations',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('invited_by_id', sa.Integer(), nullable=True),
    sa.Column('invitee_id', sa.Integer(), nullable=True),
    sa.Column('invitee_email', sa.String(length=255), nullable=False),
    sa.Column('conference_id', sa.Integer(), nullable=True),
    sa.Column('status', sa.Enum('pending', 'accepted', 'rejected', name='invitationstatus'), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('accept_token', sa.String(length=255), nullable=True),
    sa.Column('reject_token', sa.String(length=255), nullable=True),
    sa.ForeignKeyConstraint(['conference_id'], ['conferences.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['invited_by_id'], ['users.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['invitee_id'], ['users.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('accept_token'),
    sa.UniqueConstraint('reject_token')
    )
    op.create_index(op.f('ix_reviewer_invitations_id'), 'reviewer_invitations', ['id'], unique=False)
    op.create_table('reviewers',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('conference_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['conference_id'], ['conferences.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_reviewers_id'), 'reviewers', ['id'], unique=False)
    op.create_table('abstract_authors',
    sa.Column('abstract_id', sa.Integer(), nullable=False),
    sa.Column('author_id', sa.Integer(), nullable=False),
    sa.Column('author_order', sa.Integer(), nullable=True),
    sa.Column('role', sa.String(length=100), nullable=True),
    sa.ForeignKeyConstraint(['abstract_id'], ['abstracts.id'], ),
    sa.ForeignKeyConstraint(['author_id'], ['authors.id'], ),
    sa.PrimaryKeyConstraint('abstract_id', 'author_id')
    )
    op.create_table('reviews',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('reviewer_id', sa.Integer(), nullable=True),
    sa.Column('abstract_id', sa.Integer(), nullable=True),
    sa.Column('rating', sa.Integer(), nullable=True),
    sa.Column('comment', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['abstract_id'], ['abstracts.id'], ),
    sa.ForeignKeyConstraint(['reviewer_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_reviews_id'), 'reviews', ['id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_reviews_id'), table_name='reviews')
    op.drop_table('reviews')
    op.drop_table('abstract_authors')
    op.drop_index(op.f('ix_reviewers_id'), table_name='reviewers')
    op.drop_table('reviewers')
    op.drop_index(op.f('ix_reviewer_invitations_id'), table_name='reviewer_invitations')
    op.drop_table('reviewer_invitations')
    op.drop_index(op.f('ix_abstracts_id'), table_name='abstracts')
    op.drop_table('abstracts')
    op.drop_index(op.f('ix_conferences_id'), table_name='conferences')
    op.drop_table('conferences')
    op.drop_index(op.f('ix_users_id'), table_name='users')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_table('users')
    op.drop_index(op.f('ix_authors_id'), table_name='authors')
    op.drop_table('authors')
    # ### end Alembic commands ###
